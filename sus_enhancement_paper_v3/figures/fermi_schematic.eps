%!PS-Adobe-2.0 EPSF-2.0
%%Title: fermi_schematic.eps
%%Creator: gnuplot 4.4 patchlevel 4
%%CreationDate: Sat Jul 13 11:32:34 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 3 def
/Landscape false def
/Level1 false def
/Rounded true def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -100 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (fermi_schematic.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 4)
  /Author (benrosemeyer)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Jul 13 11:32:34 2013)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 300 scalefont setfont
1.000 UL
LTb
1.000 UP
0.00 0.00 1.00 C 5444 2520 M
[ [(Symbol) 300.0 0.0 true true 0 (G)]
[(Helvetica) 240.0 -90.0 true true 0 (k, )]
[(Symbol) 240.0 -90.0 true true 0 (\257)]
] -70.0 MLshow
1.00 0.00 0.00 C 6524 2520 M
[ [(Symbol) 300.0 0.0 true true 0 (G)]
[(Helvetica) 240.0 -90.0 true true 0 (k, )]
[(Symbol) 240.0 -90.0 true true 0 (\255)]
] -70.0 MLshow
0.63 0.50 0.13 C 6524 3271 M
[ [(Symbol) 300.0 0.0 true true 0 (D)]
[(Helvetica) 240.0 -90.0 true true 0 (k)]
] -70.0 MLshow
0.63 0.50 0.13 C 5984 4210 M
[ [(Helvetica) 300.0 0.0 true true 0 (+)]
] -100.0 MLshow
0.63 0.50 0.13 C 1125 829 M
[ [(Helvetica) 300.0 0.0 true true 0 (+)]
] -100.0 MLshow
0.63 0.50 0.13 C 5984 829 M
[ [(Helvetica) 300.0 0.0 true true 0 (-)]
] -100.0 MLshow
0.63 0.50 0.13 C 1125 4210 M
[ [(Helvetica) 300.0 0.0 true true 0 (-)]
] -100.0 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
0.00 0.00 0.00 C /Helvetica findfont 300 scalefont setfont
3555 4397 M
171 -3 V
170 -12 V
169 -19 V
167 -26 V
165 -33 V
161 -41 V
157 -48 V
152 -55 V
147 -61 V
141 -67 V
135 -74 V
127 -79 V
121 -85 V
112 -90 V
104 -95 V
94 -99 V
86 -104 V
76 -106 V
66 -110 V
56 -113 V
46 -115 V
35 -116 V
24 -118 V
14 -119 V
3 -119 V
-8 -119 V
-19 -119 V
-30 -117 V
-41 -116 V
-50 -114 V
-62 -111 V
-71 -108 V
-81 -105 V
-90 -102 V
-99 -97 V
-108 -92 V
-117 -88 V
-124 -82 V
-131 -77 V
5085 973 L
4941 908 L
4792 850 L
4637 799 L
4478 755 L
4315 718 L
4149 688 L
3981 665 L
3811 650 L
-171 -7 V
-171 0 V
-171 7 V
-170 15 V
-168 23 V
-166 30 V
-163 37 V
-159 44 V
-155 51 V
-149 58 V
-144 65 V
-138 70 V
-131 77 V
-124 82 V
-117 88 V
-108 92 V
-99 97 V
-90 102 V
-81 105 V
-71 108 V
-62 111 V
-50 114 V
-41 116 V
-30 117 V
-19 119 V
-8 119 V
3 119 V
14 119 V
24 118 V
35 116 V
46 115 V
56 113 V
66 110 V
76 106 V
86 104 V
94 99 V
104 95 V
112 90 V
121 85 V
127 79 V
135 74 V
141 67 V
147 61 V
152 55 V
157 48 V
161 41 V
165 33 V
167 26 V
169 19 V
170 12 V
171 3 V
% End plot #1
1.000 UP
stroke
LTb
1.000 UL
LTb
1.000 UP
0.00 0.00 1.00 C 5444 2520 M
[ [(Symbol) 300.0 0.0 true true 0 (G)]
[(Helvetica) 240.0 -90.0 true true 0 (k, )]
[(Symbol) 240.0 -90.0 true true 0 (\257)]
] -70.0 MLshow
1.00 0.00 0.00 C 6524 2520 M
[ [(Symbol) 300.0 0.0 true true 0 (G)]
[(Helvetica) 240.0 -90.0 true true 0 (k, )]
[(Symbol) 240.0 -90.0 true true 0 (\255)]
] -70.0 MLshow
0.63 0.50 0.13 C 6524 3271 M
[ [(Symbol) 300.0 0.0 true true 0 (D)]
[(Helvetica) 240.0 -90.0 true true 0 (k)]
] -70.0 MLshow
0.63 0.50 0.13 C 5984 4210 M
[ [(Helvetica) 300.0 0.0 true true 0 (+)]
] -100.0 MLshow
0.63 0.50 0.13 C 1125 829 M
[ [(Helvetica) 300.0 0.0 true true 0 (+)]
] -100.0 MLshow
0.63 0.50 0.13 C 5984 829 M
[ [(Helvetica) 300.0 0.0 true true 0 (-)]
] -100.0 MLshow
0.63 0.50 0.13 C 1125 4210 M
[ [(Helvetica) 300.0 0.0 true true 0 (-)]
] -100.0 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT1
1.00 0.00 0.00 C /Helvetica findfont 300 scalefont setfont
3555 4533 M
183 -4 V
183 -12 V
181 -20 V
180 -28 V
176 -36 V
172 -44 V
169 -51 V
163 -59 V
158 -65 V
151 -73 V
144 -79 V
137 -85 V
129 -91 V
120 -97 V
112 -101 V
101 -107 V
92 -110 V
82 -115 V
71 -118 V
60 -121 V
49 -123 V
37 -125 V
27 -126 V
14 -128 V
3 -127 V
-9 -128 V
-20 -127 V
-32 -126 V
-43 -124 V
-55 -122 V
-65 -119 V
-77 -117 V
-86 -112 V
-97 -109 V
5858 1300 L
-116 -99 V
-124 -94 V
-133 -88 V
5344 937 L
5196 861 L
5042 792 L
4881 730 L
4715 675 L
4545 627 L
4370 587 L
4192 555 L
4012 531 L
3830 515 L
-184 -8 V
-183 0 V
-184 8 V
-182 16 V
-180 24 V
-178 32 V
-175 40 V
-170 48 V
-166 55 V
-161 62 V
-154 69 V
-148 76 V
-141 82 V
-133 88 V
-124 94 V
-116 99 V
-107 104 V
-97 109 V
-86 112 V
-77 116 V
-65 120 V
-55 122 V
-43 124 V
-32 126 V
-20 127 V
-9 128 V
3 127 V
14 128 V
27 126 V
37 125 V
49 123 V
60 121 V
71 118 V
82 115 V
92 110 V
101 107 V
112 101 V
120 97 V
129 91 V
137 85 V
144 79 V
151 73 V
158 65 V
163 59 V
169 51 V
172 44 V
176 36 V
180 28 V
181 20 V
183 12 V
183 4 V
% End plot #1
1.000 UP
stroke
LTb
1.000 UL
LTb
1.000 UP
0.00 0.00 1.00 C 5444 2520 M
[ [(Symbol) 300.0 0.0 true true 0 (G)]
[(Helvetica) 240.0 -90.0 true true 0 (k, )]
[(Symbol) 240.0 -90.0 true true 0 (\257)]
] -70.0 MLshow
1.00 0.00 0.00 C 6524 2520 M
[ [(Symbol) 300.0 0.0 true true 0 (G)]
[(Helvetica) 240.0 -90.0 true true 0 (k, )]
[(Symbol) 240.0 -90.0 true true 0 (\255)]
] -70.0 MLshow
0.63 0.50 0.13 C 6524 3271 M
[ [(Symbol) 300.0 0.0 true true 0 (D)]
[(Helvetica) 240.0 -90.0 true true 0 (k)]
] -70.0 MLshow
0.63 0.50 0.13 C 5984 4210 M
[ [(Helvetica) 300.0 0.0 true true 0 (+)]
] -100.0 MLshow
0.63 0.50 0.13 C 1125 829 M
[ [(Helvetica) 300.0 0.0 true true 0 (+)]
] -100.0 MLshow
0.63 0.50 0.13 C 5984 829 M
[ [(Helvetica) 300.0 0.0 true true 0 (-)]
] -100.0 MLshow
0.63 0.50 0.13 C 1125 4210 M
[ [(Helvetica) 300.0 0.0 true true 0 (-)]
] -100.0 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT1
0.00 0.00 1.00 C /Helvetica findfont 300 scalefont setfont
3555 4251 M
157 -4 V
158 -10 V
156 -18 V
154 -24 V
151 -31 V
149 -37 V
144 -44 V
141 -51 V
135 -56 V
130 -62 V
124 -68 V
118 -74 V
111 -78 V
103 -83 V
96 -87 V
87 -92 V
79 -95 V
70 -98 V
61 -102 V
52 -103 V
42 -106 V
33 -108 V
22 -109 V
13 -109 V
2 -110 V
-7 -110 V
-18 -109 V
-27 -108 V
-38 -107 V
-47 -105 V
-56 -102 V
-65 -100 V
-75 -97 V
-83 -93 V
-92 -90 V
-100 -85 V
-107 -81 V
-114 -76 V
-121 -70 V
-127 -66 V
-133 -59 V
4695 981 L
4552 933 L
4406 893 L
4256 858 L
4103 831 L
3948 810 L
3791 796 L
-158 -7 V
-157 0 V
-158 7 V
-157 14 V
-155 21 V
-153 27 V
-150 35 V
-146 40 V
-143 48 V
-138 53 V
-133 59 V
-127 66 V
-121 70 V
-114 76 V
-107 81 V
-100 85 V
-92 90 V
-83 93 V
-75 97 V
-65 100 V
-56 102 V
-47 105 V
-38 107 V
-27 108 V
-18 109 V
-7 110 V
2 110 V
13 109 V
22 109 V
33 108 V
42 106 V
52 103 V
61 102 V
70 98 V
79 95 V
87 92 V
96 87 V
103 83 V
111 78 V
118 74 V
124 68 V
130 62 V
135 56 V
141 51 V
144 44 V
149 37 V
151 31 V
154 24 V
156 18 V
158 10 V
157 4 V
% End plot #1
1.000 UP
stroke
LTb
1.000 UL
LTb
1.000 UP
0.00 0.00 1.00 C 5444 2520 M
[ [(Symbol) 300.0 0.0 true true 0 (G)]
[(Helvetica) 240.0 -90.0 true true 0 (k, )]
[(Symbol) 240.0 -90.0 true true 0 (\257)]
] -70.0 MLshow
1.00 0.00 0.00 C 6524 2520 M
[ [(Symbol) 300.0 0.0 true true 0 (G)]
[(Helvetica) 240.0 -90.0 true true 0 (k, )]
[(Symbol) 240.0 -90.0 true true 0 (\255)]
] -70.0 MLshow
0.63 0.50 0.13 C 6524 3271 M
[ [(Symbol) 300.0 0.0 true true 0 (D)]
[(Helvetica) 240.0 -90.0 true true 0 (k)]
] -70.0 MLshow
0.63 0.50 0.13 C 5984 4210 M
[ [(Helvetica) 300.0 0.0 true true 0 (+)]
] -100.0 MLshow
0.63 0.50 0.13 C 1125 829 M
[ [(Helvetica) 300.0 0.0 true true 0 (+)]
] -100.0 MLshow
0.63 0.50 0.13 C 5984 829 M
[ [(Helvetica) 300.0 0.0 true true 0 (-)]
] -100.0 MLshow
0.63 0.50 0.13 C 1125 4210 M
[ [(Helvetica) 300.0 0.0 true true 0 (-)]
] -100.0 MLshow
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
0.63 0.50 0.13 C /Helvetica findfont 300 scalefont setfont
3555 4397 M
175 44 V
183 35 V
190 24 V
195 14 V
199 1 V
199 -12 V
199 -25 V
195 -39 V
190 -52 V
181 -67 V
171 -79 V
158 -91 V
143 -102 V
127 -113 V
109 -120 V
90 -128 V
71 -133 V
51 -137 V
32 -138 V
12 -139 V
-7 -137 V
-23 -135 V
-39 -131 V
-54 -126 V
-31 -121 V
60 -124 V
46 -129 V
32 -133 V
15 -136 V
-3 -139 V
-22 -138 V
-41 -138 V
-61 -135 V
-80 -131 V
6117 1163 L
5999 1046 L
5863 939 L
5712 842 L
5548 757 L
5371 684 L
5186 624 L
4993 579 L
4796 546 L
4597 528 L
-200 -5 V
-197 7 V
-192 20 V
-187 29 V
-180 40 V
-173 0 V
3288 579 L
3101 550 L
2909 530 L
-197 -7 V
-200 5 V
-199 18 V
-197 33 V
-193 45 V
-185 60 V
-177 73 V
-164 85 V
-151 97 V
-136 107 V
992 1163 L
892 1287 L
-80 131 V
-61 135 V
-41 138 V
-22 138 V
-3 139 V
15 136 V
32 133 V
46 129 V
60 124 V
-31 121 V
-54 126 V
-39 131 V
-23 135 V
-7 137 V
12 139 V
32 138 V
51 137 V
71 133 V
90 128 V
109 120 V
127 113 V
143 102 V
158 91 V
171 79 V
181 67 V
190 52 V
195 39 V
199 25 V
199 12 V
199 -1 V
195 -14 V
190 -24 V
183 -35 V
175 -44 V
% End plot #1
1.000 UP
stroke
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol Helvetica
